import { InMemoryCacheConfig } from '@apollo/client';
import { relayStylePagination } from '@apollo/client/utilities';

// generated by Fragment Matcher plugin
import possibleTypes from './generated/fragments';

export const cacheConfig: InMemoryCacheConfig = {
  ...possibleTypes,
  typePolicies: {
    Query: {
      fields: {
        card(existingData, { args, toReference }) {
          return (
            existingData || toReference({ __typename: 'Card', id: args?.id })
          );
        },
        category(existingData, { args, toReference }) {
          return (
            existingData ||
            toReference({ __typename: 'Category', id: args?.id })
          );
        },
      },
    },
    Card: {
      fields: {
        categories: {
          keyArgs: ['id'],
        },
      },
    },
    Category: {
      fields: {
        cards: relayStylePagination(),
      },
    },
  },
};

export default cacheConfig;
